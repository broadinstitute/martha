# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

run_env_setup: &run_env_setup
  run:
    name: Setup Environment Variables
    command: |
      echo 'export PATH="${PATH}:${HOME}/repo/git-secrets"' >> $BASH_ENV
      source $BASH_ENV

jobs:
  lint:
    docker:
      - image: circleci/node:12.16.1

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Run ESLint
          command: npm run lint

  test:
    docker:
      - image: circleci/node:12.16.1

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          command: npm ci
      - <<: *run_env_setup
      - run:
          name: Install git secrets and configure minnie-kenny.sh
          command: |
            git clone https://github.com/awslabs/git-secrets.git
            pushd git-secrets >/dev/null
            git checkout ad82d68ee924906a0401dfd48de5057731a9bc84
            popd >/dev/null
            ./minnie-kenny.sh -f
      - <<: *run_env_setup
      - run:
          command: npm test

  tag:
    docker:
      - image: alpine/git

    steps:
      - add_ssh_keys:
          fingerprints:
            - "29:14:13:da:54:92:5d:7d:50:26:a2:96:40:fd:a9:ed"
      - checkout
      - run:
          when: on_success
          command: |
            echo 'export TAG_NAME=dev_tests_passed_$(date +%s)' >> $BASH_ENV
            source $BASH_ENV
            git tag $TAG_NAME
            git push origin $TAG_NAME

  build-image:
    docker:
      - image: circleci/node:8.15

    environment:
      IMAGE_NAME: quay.io/broadinstitute/martha
      QUAY_USER: broadinstitute+martha_circle_bot

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build image
          command: |
            docker build -t ${IMAGE_NAME}:${CIRCLE_BRANCH} -f docker/Dockerfile .
            if [[ ${CIRCLE_BRANCH} == "dev" ]]; then docker tag ${IMAGE_NAME}:${CIRCLE_BRANCH} ${IMAGE_NAME}:latest ; fi

      - run:
          name: Push to quay
          command: |
            docker login -u="${QUAY_USER}" -p="${QUAY_USER_PW}" quay.io
            docker push ${IMAGE_NAME}

workflows:
  version: 2
  test-and-tag:
    jobs:
      - test
      - build-image
      - tag:
          requires:
            - test
            - build-image
          filters:
            branches:
              only: dev
