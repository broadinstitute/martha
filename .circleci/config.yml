# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

job_defaults: &job_defaults
  working_directory: ~/repo

git_tags: &git_tags
  tags:
    only: /^\d+\.\d+\.\d+$/

run_env_setup: &run_env_setup
  run:
    name: Setup Environment Variables
    command: |
      echo 'export PATH="${PATH}:${HOME}/repo/git-secrets"' >> $BASH_ENV
run_secret_setup: &run_secret_setup
  run:
    name: Install git secrets and configure minnie-kenny.sh
    command: |
      git clone https://github.com/awslabs/git-secrets.git
      pushd git-secrets >/dev/null
      git checkout ad82d68ee924906a0401dfd48de5057731a9bc84
      popd >/dev/null
      ./minnie-kenny.sh -f

jobs:
  secrets:
    <<: *job_defaults
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - <<: *run_env_setup
      - <<: *run_secret_setup
      - run:
          name: Check for git secrets
          command: git secrets --scan-history

  lint:
    <<: *job_defaults
    docker:
      - image: cimg/node:16.14.0

    steps:
      - checkout
      - run:
          name: Run ESLint
          command: |
            npm install
            npx eslint .

  test:
    <<: *job_defaults
    docker:
      - image: cimg/node:16.14.0

    steps:
      - checkout
      - <<: *run_env_setup
      - <<: *run_secret_setup
      - run:
          name: Setup npm
          command: |
            npm ci
            sudo npm install -g codecov
      - run:
          name: Run tests
          command: npm test
      - run:
          name: Upload codecov
          command: |
            npm run report-coverage
            codecov

  tag:
    <<: *job_defaults
    docker:
      - image: alpine/git

    steps:
      - add_ssh_keys:
          fingerprints:
            - "29:14:13:da:54:92:5d:7d:50:26:a2:96:40:fd:a9:ed"
      - checkout
      - run:
          when: on_success
          command: |
            echo 'export TAG_NAME=dev_tests_passed_$(date +%s)' >> $BASH_ENV
            source $BASH_ENV
            git tag $TAG_NAME
            git push origin $TAG_NAME

  build-image:
    <<: *job_defaults
    docker:
      - image: google/cloud-sdk

    environment:
      GCR_REGISTRY_HOST: us.gcr.io
      GCR_IMAGE_NAME: us.gcr.io/broad-dsp-gcr-public/martha

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build image
          command: |
            docker build -t "${GCR_IMAGE_NAME}:${CIRCLE_TAG:-${CIRCLE_BRANCH}}" -f docker/Dockerfile .
            if [[ ${CIRCLE_BRANCH} == "dev" ]]; then
              docker tag ${GCR_IMAGE_NAME}:${CIRCLE_BRANCH} ${GCR_IMAGE_NAME}:latest
            fi

      - run:
          name: Push to GCR
          command: |
            # SA copied from secret/dsde/dsp-techops/common/dspci-wb-gcr-service-account.json
            # - Follow up: https://broadworkbench.atlassian.net/browse/DDO-526
            # Get the credentials used to push to GCR from CircleCI from the CircleCI environment variables
            echo ${GCR_SA} > ${HOME}/gcr_auth_key_file.json
            gcloud auth activate-service-account --key-file ${HOME}/gcr_auth_key_file.json
            # Register `gcloud` as a Docker credential helper. Add `-q` to silence confirmation prompts
            gcloud auth configure-docker ${GCR_REGISTRY_HOST} -q

            docker push "${GCR_IMAGE_NAME}:${CIRCLE_TAG:-${CIRCLE_BRANCH}}"
            if [[ ${CIRCLE_BRANCH} == "dev" ]]; then
              docker push ${GCR_IMAGE_NAME}:latest
            fi

workflows:
  version: 2
  test-and-tag:
    jobs:
      - secrets:
          filters:
            <<: *git_tags
      - lint:
          filters:
            <<: *git_tags
      - test:
          requires:
            - secrets
          filters:
            <<: *git_tags
      - build-image:
          requires:
            - secrets
          filters:
            <<: *git_tags
      - tag:
          requires:
            - lint
            - test
            - build-image
          filters:
            branches:
              only: dev
            <<: *git_tags

